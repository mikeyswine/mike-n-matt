[gd_scene load_steps=15 format=3 uid="uid://ctmu7wrocro8i"]

[ext_resource type="Texture2D" uid="uid://b06hkbjb2074r" path="res://Player/Diver_sm.png" id="1_xvfjd"]
[ext_resource type="Texture2D" uid="uid://bvt1cuarkum4c" path="res://Items/coin.png" id="2_c22ph"]
[ext_resource type="AudioStream" uid="uid://bandtddvi07ng" path="res://Items/pickupCoin.wav" id="2_ku60q"]
[ext_resource type="FontFile" uid="uid://c2aitmlu74nm7" path="res://UI/Kenney Mini.ttf" id="3_1upx8"]

[sub_resource type="GDScript" id="GDScript_wpfxc"]
script/source = "extends CharacterBody2D

## Node References
@onready var animation_player: AnimationPlayer = $AnimationPlayer
@onready var sprite_2d: Sprite2D = $Sprite2D
@onready var player_coins: Label = %CoinsLabel
@onready var audio_stream_player_2d: AudioStreamPlayer2D = $AudioStreamPlayer2D


@export_category(\"Movement\")
## Grounded horizontal speed
@export var move_speed_walk: float = 20.0 
## Airborne horizontal speed
@export var move_speed_sink: float = 10.0
## Jump vertical speed
@export var jump_speed: float = -13.0
## Falling vertical acceleration
@export var sink_rate: float = 10.0
## Floating vertical acceleration
@export var float_rate: float = 10.0
## Is player floating upwards?
var floating = false

## Coin Counter
var coins = 0

## Enumerator to describe possible states
enum {
	WALK,
	FALL
}
## State Machine current state
var state = WALK



## Runtime Functions ###########################################################

func _physics_process(delta: float) -> void:
	match state:
		WALK:
			walk_state(delta)
		FALL:
			fall_state(delta)
	move_and_slide()



## State Functions #############################################################
func walk_state(delta):
	## Check Float State Transition
	if not is_on_floor():
		state = FALL
		return
		
	## Handle jump
	# Might be better to use up arrow and save space for another function?
	if Input.is_action_just_pressed(\"up\") or Input.is_action_just_pressed(\"jump\"):
		velocity.y = jump_speed
	
	## Handle move
	var direction := Input.get_axis(\"left\", \"right\")
	if direction:
		velocity.x = direction * move_speed_walk
		## Handle Sprite Animation
		animation_player.play(\"walk\")
		if velocity.x>0:
			sprite_2d.flip_h = false
		else:
			sprite_2d.flip_h = true
	else:
		## Stop
		velocity.x = 0.0
		animation_player.play(\"idle\")


func fall_state(delta):
	## Check Walk State Transition
	if is_on_floor():
		velocity.y = 0.0
		state = WALK
		return
	
	## Apply Gravity
	if floating:
		velocity += Vector2(0,-float_rate) * delta 
	else:
		velocity += Vector2(0,sink_rate) * delta 
	#Multiplied by delta because this is an acceleration.
	#Scaling it by delta will keep the rate from being framerate dependent.
	
	## Hold Down to speed up your fall
	if Input.is_action_just_pressed(\"down\"):
		velocity += Vector2(0,sink_rate) * delta 
	
	## Handle Fall Movement
	var direction := Input.get_axis(\"left\", \"right\")
	if direction:
		velocity.x = direction * move_speed_sink
		## Handle Sprite Animation
		animation_player.play(\"fall\")
		if velocity.x>0:
			sprite_2d.flip_h = false
		else:
			sprite_2d.flip_h = true
	else:
		## Stop
		velocity.x = 0.0


func start_float():
	floating = true

func stop_float():
	floating = false


## Custom Functions ############################################################
func increment_coins(amount=1):
	coins += amount
	player_coins.text = str(coins)
	audio_stream_player_2d.play()
	
func take_damage():
	var blood_splatter = load(\"res://Items/blood_splatter.tscn\").instantiate()
	blood_splatter.emitting = true
	# blood_splatter will queue_free upon completion.
	add_child(blood_splatter)
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_dycd5"]
radius = 2.5
height = 7.0

[sub_resource type="Gradient" id="Gradient_5ypwu"]
offsets = PackedFloat32Array(0.54, 0.946667)
colors = PackedColorArray(1, 1, 1, 1, 1, 1, 1, 0)

[sub_resource type="Animation" id="Animation_dqptd"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="Animation" id="Animation_bpwvm"]
resource_name = "fall"
length = 0.0333367
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [6]
}

[sub_resource type="Animation" id="Animation_pj108"]
resource_name = "idle"
length = 2.0
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1.66667),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [0, 1]
}

[sub_resource type="Animation" id="Animation_o3m8l"]
resource_name = "land"
length = 0.0333367
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [8]
}

[sub_resource type="Animation" id="Animation_kwoqj"]
resource_name = "walk"
length = 1.2
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.3, 0.6, 0.9),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [2, 3, 4, 5]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_mkxw6"]
_data = {
"RESET": SubResource("Animation_dqptd"),
"fall": SubResource("Animation_bpwvm"),
"idle": SubResource("Animation_pj108"),
"land": SubResource("Animation_o3m8l"),
"walk": SubResource("Animation_kwoqj")
}

[sub_resource type="AtlasTexture" id="AtlasTexture_lebeh"]
atlas = ExtResource("2_c22ph")
region = Rect2(1, 1, 5, 6)

[node name="Player" type="CharacterBody2D"]
z_index = 1
collision_layer = 3
script = SubResource("GDScript_wpfxc")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0.5, 0.5)
shape = SubResource("CapsuleShape2D_dycd5")

[node name="Bubbles" type="CPUParticles2D" parent="."]
position = Vector2(-0.5, -2.5)
amount = 6
lifetime = 3.0
explosiveness = 0.7
randomness = 0.45
direction = Vector2(0, -1)
gravity = Vector2(0, -20)
initial_velocity_max = 1.0
linear_accel_max = 1.0
color = Color(0.352, 0.88, 0.7832, 1)
color_ramp = SubResource("Gradient_5ypwu")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = ExtResource("1_xvfjd")
hframes = 11

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_mkxw6")
}
autoplay = "idle"

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="MarginContainer" type="MarginContainer" parent="CanvasLayer"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/margin_left = 4
theme_override_constants/margin_top = 4
theme_override_constants/margin_right = 4
theme_override_constants/margin_bottom = 4

[node name="HBoxContainer" type="HBoxContainer" parent="CanvasLayer/MarginContainer"]
layout_mode = 2
size_flags_horizontal = 0
size_flags_vertical = 0
theme_override_constants/separation = 3

[node name="TextureRect" type="TextureRect" parent="CanvasLayer/MarginContainer/HBoxContainer"]
layout_mode = 2
texture = SubResource("AtlasTexture_lebeh")
stretch_mode = 5

[node name="CoinsLabel" type="Label" parent="CanvasLayer/MarginContainer/HBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 8
size_flags_vertical = 0
theme_override_fonts/font = ExtResource("3_1upx8")
theme_override_font_sizes/font_size = 8
text = "0"
horizontal_alignment = 2

[node name="AudioStreamPlayer2D" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("2_ku60q")
